#include <iostream>
#include <vector>
#include <queue>
#define MAX 100010
using namespace std;

typedef struct Node{
	int layer;
	vector<int> nexts;
}Node;

int n;
double price_ori, rate;
Node nodes[MAX];
vector <int> list;
int vis[MAX];

void BFS(Node* nodes){
	int maxlayer =-1;
	int maxcount = 1;
	queue<int> q;
	q.push(n);
	nodes[n].layer = 0;
	while (!q.empty()){
		int order = q.front();
		q.pop();
		vis[order] = 1;

		if (nodes[order].layer > maxlayer){
			maxlayer = nodes[order].layer;
			maxcount = 1;
		}
		else if (nodes[order].layer == maxlayer){
			maxcount++;
		}

		for (int j = 0; j < nodes[order].nexts.size(); j++){
			if (vis[nodes[order].nexts[j]] == 0){
				q.push(nodes[order].nexts[j]);
				nodes[nodes[order].nexts[j]].layer = nodes[order].layer + 1;
			}
		}
	}
	double price = price_ori;
	for (int i = 1; i < maxlayer; i++){
		price = price*(1 + (rate) / 100.0000);
	}
	printf("%.2lf %d", price, maxcount);
}

int main(){
	scanf("%d %lf %lf", &n, &price_ori, &rate);
	for (int i = 0; i < n; i++){
		int n_next;
		scanf("%d", &n_next);
		if (n_next == -1)
			n_next = n;
		nodes[n_next].nexts.push_back(i);
	}
	BFS(nodes);

	system("pause");
	return 0;
}