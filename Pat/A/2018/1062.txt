// ConsoleApplication1.cpp : 定义控制台应用程序的入口点。
//
#include "stdafx.h"
#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
#define MAX 100010
#pragma warning (disable:4996)
using namespace std;
int n;
int a, b;

struct Per{
	string id;
	int vir;
	int tal;
	int type;
}pers[MAX];
vector<Per> out;
bool cmp(Per per1, Per per2){
	int total1 = per1.tal + per1.vir;
	int total2 = per2.tal + per2.vir;
	if (per1.type == per2.type){
		if (total1 == total2){
			if (per1.vir == per2.vir)
				return per1.id < per2.id;
			return per1.vir > per2.vir;
		}
			
		return total1 > total2;
	}
	return per1.type > per2.type;
}

int main()
{
	scanf("%d%d%d", &n, &a, &b);
	if (a > b){
		printf("0\n");
		return 0;
	}
	for (int i = 0; i < n; i++){
		cin >> pers[i].id >> pers[i].vir >> pers[i].tal;
		if (pers[i].vir >= b && pers[i].tal >= b)
			pers[i].type = 4;
		else if (pers[i].vir >= b && pers[i].tal >= a)
			pers[i].type = 3;
		else if (pers[i].vir >= a && pers[i].tal >= b )
			pers[i].type = 1;
		else if (pers[i].vir >= a && pers[i].tal >= a && pers[i].vir >= pers[i].tal)
			pers[i].type = 2;
		else if (pers[i].vir >= a && pers[i].tal >= a && pers[i].vir < pers[i].tal)
			pers[i].type = 1;
		else 
			pers[i].type = 0;
	}
	for (int i = 0; i < n; i++){
		if (pers[i].type)
			out.push_back(pers[i]);
	}

	sort(out.begin(), out.end(), cmp);
	if (!out.size()){
		printf("0\n");
	}
	else
	{
		printf("%d\n", out.size());
		for (int i = 0; i < out.size(); i++){
			printf("%s %d %d\n", out[i].id.c_str(), out[i].vir, out[i].tal);
		}
	}

	system("pause");
	return 0;
}