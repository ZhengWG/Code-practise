// ConsoleApplication1.cpp : 定义控制台应用程序的入口点。
//
#include "stdafx.h"
#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#define MAX 1010
#define INF 999999999
#pragma warning (disable:4996)
using namespace std;
int n;
int nums[MAX];
struct Node{
	int v;
	int layer;
	Node* lchild;
	Node* rchild;
};

Node* newNode(int x){
	Node* node = new Node;
	node->v = x;
	node->lchild = NULL;
	node -> rchild = NULL;
	node->layer = 0;
	return node;
}
void insert(Node* &root, int x){
	if (root == NULL){
		root = newNode(x);
		return;
	}
	if (root->v < x){
		insert(root->rchild, x);
	}
	else{
		insert(root->lchild, x);
	}
}
int maxlayer = -1;
vector<int> layers;
void BFS(Node* root){
	queue<Node*> qu;
	qu.push(root);
	while (!qu.empty()){
		Node* node = qu.front();
		qu.pop();
		layers.push_back(node->layer);
		if (maxlayer < node->layer){
			maxlayer = node->layer;
		}
		if (node->lchild != NULL){
			qu.push(node->lchild);
			node->lchild->layer = node->layer + 1;

		}
		if (node->rchild != NULL){
			qu.push(node->rchild);
			node->rchild->layer = node->layer + 1;
		}
	}
}


int main()
{
	Node* root = NULL;
	scanf("%d", &n);
	for (int i = 0; i < n; i++){
		scanf("%d", &nums[i]);
		insert(root, nums[i]);
	}
	BFS(root);
	int n1=0, n2=0;
	for (int i = 0; i < layers.size(); i++){
		if (layers[i] == maxlayer - 1)
			n1++;
		if (layers[i] == maxlayer)
			n2++;
	}
	printf("%d + %d = %d", n2, n1, n1 + n2);

	system("pause");
	return 0;
}